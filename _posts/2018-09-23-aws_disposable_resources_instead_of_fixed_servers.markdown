---
layout: post
title:  "AWS Design Principles - Disposable Resources Instead of Fixed Servers"
date:   2018-09-23 00:00:00 +0000
categories: aws
---

在传统的IT环境里，我们得不断地修复资源和导入新资源，这需要我们不停地登陆到服务器去配置软件或修复bug，写死各种IP地址，跑测试用例，或者执行其他一系列操作。

然而当你面向aws设计系统时，就得抛弃上面这些想法，这样才能利用好云计算的动态资源特性。你可以把服务器和其它组件都当作临时资源，在你需要时可以启用任意数量的资源，然后在不需要时把他们随时关闭掉。

云计算的另一个优势，就是可以解决长时间运行的服务器的“配置漂移”问题。随着时间的推移，需求的变更和软件的补丁版本会导致系统难以测试，并且在不同环境中配置不一致。这个问题可以通过“持久架构模式”来解决，在这种模式下，一台服务器在从启动到废弃的整个生命周期当中，它的配置都不会在改变，当遇到bug或者需要更新时，就用一台已经有最新配置的符合要求的资源来替代它。因此，该模式可以保证计算机资源始终保持一致性、可测性，也更便于回滚


当你想要部署一台测试服务器，或者是因为既存系统工作量过载而需要扩容增加服务器时，你肯定不想手动地去配置这些新资源，让这些重复性工作自动完成可以节约时间并有效避免人为错误

有以下途径可以实现自动部署

### Bootstrapping
使用默认配置启动EC2或者RDS,然后再执行一些自动化配置脚本来安装软件或者拷贝数据，
从而使这台新的资源达到一个特定的状态